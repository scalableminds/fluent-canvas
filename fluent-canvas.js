// Generated by CoffeeScript 1.7.1
(function() {
  (function(root, factory) {
    if (typeof define === "function" && define.amd) {
      return define(["lodash"], factory);
    } else {
      return root.FluentCanvas = factory(root._);
    }
  })(this, function(_) {
    var FluentCanvas;
    return FluentCanvas = new Function("context", _.template("if (context.length) {\n  context = context[0];\n}\n\nif (context.tagName && context.tagName.toLowerCase() == \"canvas\") {\n  context = context.getContext(\"2d\");\n}\n\nreturn {\n\n  <% setters.forEach(function (a) { %>\n  <%= a %> : function (val) {\n    context.<%= a %> = val;\n    return this;\n  },\n  <% }) %>\n\n  <% methods.forEach(function (a) { %>\n  <%= a %> : function () {\n    context.<%= a %>.apply(context, arguments);\n    return this;\n  },\n  <% }) %>\n\n  <% passthrough.forEach(function (a) { %>\n  <%= a %> : function () {\n    return context.<%= a %>.apply(context, arguments);\n  },\n  <% }) %>\n  \n  tap : function (callback) {\n    callback(this, context);\n    return this;\n  },\n\n  context : context\n\n};\n\n//# sourceURL=/lib/fluent_canvas.js", {
      setters: ["fillStyle", "font", "globalAlpha", "globalCompositeOperation", "lineCap", "lineDashOffset", "lineJoin", "lineWidth", "miterLimit", "shadowBlur", "shadowColor", "shadowOffsetX", "shadowOffsetY", "strokeStyle", "textAlign", "textBaseline"],
      methods: ["arc", "arcTo", "beginPath", "bezierCurveTo", "clearRect", "clip", "closePath", "drawImage", "fill", "fillRect", "fillText", "lineTo", "moveTo", "putImageData", "quadraticCurveTo", "rect", "restore", "rotate", "save", "scale", "setLineDash", "setTransform", "stroke", "strokeRect", "strokeText", "transform", "translate"],
      passthrough: ["createImageData", "createLinearGradient", "createPattern", "createRadialGradient", "getImageData", "getLineDash", "isPointInPath", "isPointInStroke", "measureText"]
    }));
  });

}).call(this);
